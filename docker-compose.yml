services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: postgres  # Default database for initial connection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init-databases.sql:/docker-entrypoint-initdb.d/01-init-databases.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  airflow:
    image: apache/airflow:3.0.4-python3.12
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@postgres:5432/stock_data
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      # Airflow connections via environment variables
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql://postgres:postgres@postgres:5432/stock_data
      - AIRFLOW_CONN_POSTGRES_STOCK=postgresql://postgres:postgres@postgres:5432/stock_data
    ports:
      - "8080:8080"
    volumes:
      - ./stock_etl/airflow_dags:/opt/airflow/dags
      - ./stock_etl:/opt/airflow/stock_etl
      - ./stock_ml:/opt/airflow/stock_ml
      - ./stock_etl/airflow_logs:/opt/airflow/logs
    command: >
      bash -c "
        pip install holidays psycopg2-binary pandas numpy scikit-learn xgboost imbalanced-learn TA-Lib &&
        export PYTHONPATH=/opt/airflow:$PYTHONPATH &&
        airflow standalone
      "

  # Web Application Services
  web-backend:
    build: ./web-app/backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=stock_data
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SCHEMA=prod_stock_data
    ports:
      - "3001:3001"
    volumes:
      - ./web-app/backend/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-frontend:
    build: ./web-app/frontend
    depends_on:
      web-backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./web-app/frontend/src:/app/src
      - ./web-app/frontend/public:/app/public
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  pgadmin_data: